import { ChevronLeftIcon } from "@chakra-ui/icons";
import { Box, Center, Container, Flex, Heading, Icon, IconButton, Image, SimpleGrid, Text, VStack } from "@chakra-ui/react";
import { GetStaticPaths, GetStaticProps } from "next";
import { useRouter } from "next/dist/client/router";
import Head from "next/head";
import { BannerContinent } from "../../components/BannerContinent";
import { Cities, City } from "../../components/Cities";
import { Header } from "../../components/Header";
import { InfoContinent } from "../../components/InfoContinent";
import api from "../../services/api";
import { ParsedUrlQuery } from 'querystring';

export interface Continent {
  name: string;
  url: string;
  longDescription: string;
  countries: number;
  languages: number;
  cities: number;
  listCities: City[]
}

interface ContinentsProps {
  continent: Continent;
}

export default function Continents({ continent }: ContinentsProps) {
  const router = useRouter()

  console.log(continent)
  return (
    <Flex direction="column">
      <Head>
        <title>Viagens para | {continent.name}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header>
        <Center height="100%">
          <IconButton
            onClick={() => router.back()}
            variant="ghost"
            aria-label="back page"
            size={"sm"}
            icon={<ChevronLeftIcon w={[4, 8]} h={[4, 8]} />}
          />
        </Center>
      </Header>
      <Flex
        as="main"
        direction="column"
      >
        <Box
          as="section">
          <BannerContinent continent={continent} />
          <Container
            maxW="container.xl"
          >
            <Flex
              marginTop={{ base: 6, lg: 20 }}
              marginBottom={{ base: 6, lg: 20 }}
              direction={{ base: "column", xl: "row" }}
            >
              <Text flex={1} textAlign="justify" fontSize={["sm", '2xl']}>
                {continent.longDescription}
              </Text>
              <InfoContinent continent={continent} />
            </Flex>
            <Cities cities={continent.listCities} />
          </Container>
        </Box>
      </Flex>
    </Flex>
  )
}

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: 'blocking'
  }
}

interface ContinentsParams extends ParsedUrlQuery {
  continent: string
}

export const getStaticProps: GetStaticProps<ContinentsProps, ContinentsParams> = async ({ params }) => {
  const response = await api.get<Continent[]>(`/continents`, {
    params: {
      name: params?.continent
    }
  })

  const continent: Continent = response.data[0]
  return {
    props: {
      continent
    }
  }
}